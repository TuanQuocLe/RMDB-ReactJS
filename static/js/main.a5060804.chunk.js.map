{"version":3,"sources":["../node_modules/typescript/lib sync","GlobalStyle.js","img-src/react-movie-logo.svg","img-src/tmdb_logo.svg","components/Header/Header.style.js","components/Header/index.js","config.js","API.js","components/HeroImage/HeroImage.style.js","components/HeroImage/index.js","components/Grid/Grid.style.js","components/Grid/index.js","components/Thumb/Thumb.style.js","components/Thumb/index.js","components/Spinner/index.js","components/Spinner/Spinner.style.js","components/SearchBar/SearchBar.style.js","img-src/search-icon.svg","components/SearchBar/index.js","components/Button/Button.style.js","components/Button/index.js","helpers.js","hooks/useHomeFetch.js","img-src/no_image.jpeg","components/Home.js","components/BreadCrumb/BreadCrumb.style.js","components/BreadCrumb/index.js","components/MovieInfo/MovieInfo.style.js","components/MovieInfo/index.js","components/MovieInfoBar/MovieInfoBar.style.js","components/MovieInfoBar/index.js","components/Actor/Actor.style.js","components/Actor/index.js","components/Movie.js","hooks/useMovieFetch.js","components/NotFound.js","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","GlobalStyle","createGlobalStyle","Wrapper","styled","div","Content","LogoImg","img","TMDBLogoImg","Header","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","movieId","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","username","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","value","rating","props","image","Text","HeroImage","title","text","Grid","header","children","Image","Thumb","clickable","Spinner","SearchBar","setSearchTerm","useState","state","setState","useEffect","timer","setTimeout","clearTimeout","searchIcon","type","placeholder","onChange","event","target","button","Button","callback","onClick","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","isPersistedState","stateName","sessionState","sessionStorage","getItem","parse","initialState","results","total_pages","total_result","Home","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","console","log","API","movies","prev","setItem","useHomeFetch","backdrop_path","overview","map","movie","poster_path","NoImage","BreadCrumb","movieTitle","backdrop","MovieInfo","className","vote_average","directors","length","director","name","MovieInfoBar","budget","revenue","Actor","character","imageUrl","Movie","credits","crew","filter","member","job","actors","cast","useMovieFetch","useParams","original_title","runtime","actor","profile_path","credit_id","NotFound","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5060804.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 19;","import { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\n    :root {\n        --maxWidth: 1280px;\n        --white: #fff;\n        --lightGrey: #eee;\n        --medGrey: #353535;\n        --darkGrey: #1c1c1c;\n        --fontSuperBig: 2.5rem;\n        --fontBig: 1.7rem;\n        --fontMed: 1.2rem;\n        --fontSmall: 1rem;\n    }\n    * {\n        box-sizing: border-box;\n        font-family: 'Abel', sans-serif;\n        h1 {\n            font-size: 2rem;\n            font-weight: 600;\n            color: var(--white);\n\n        }\n        h3 {\n            font-size: 1.1 rem;\n            font-weight: 600;\n        }\n\n        p {\n            font-size: 1 rem;\n            color: var(--white)\n        }\n    }\n\n\n\n`","export default __webpack_public_path__ + \"static/media/react-movie-logo.42955eb6.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.f15b6632.svg\";","import styled from 'styled-components'\nexport const Wrapper = styled.div`\n    background: var(--darkGrey);\n    padding: 0 20px;\n\n`\nexport const Content = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    max-width: var(--maxWidth);\n    padding: 10px 0;\n    margin: 0 auto;\n`\nexport const LogoImg = styled.img`\n    width: 200px;\n    @media screen and (max-width: 500px) {\n        width: 200px\n    }\n`\nexport const TMDBLogoImg = styled.img`\n    width: 120px;\n    @media screen and (max-width: 500px) {\n        width: 100px;\n    }\n`","import React from 'react'\nimport RMDBLogo from '../../img-src/react-movie-logo.svg' \nimport TMDBLogo from '../../img-src/tmdb_logo.svg'\nimport { Wrapper, Content, LogoImg, TMDBLogoImg } from './Header.style'\nimport { Link } from 'react-router-dom'\nimport PropTypes from  'prop-types'\n\nconst Header = () => (\n    <Wrapper>\n        <Content>\n            <Link to='/'>\n                <LogoImg src={RMDBLogo} alt='rmdb-logo'/>\n            </Link>\n            <TMDBLogoImg src={TMDBLogo} alt='tmdb-logo' /> \n        </Content>\n    </Wrapper>\n)\n\n\nexport default Header","// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'cb5f83b98dda11d47381862aa9822366';\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w780';\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n};","import {\n    SEARCH_BASE_URL,\n    POPULAR_BASE_URL,\n    API_URL,\n    API_KEY,\n    REQUEST_TOKEN_URL,\n    LOGIN_URL,\n    SESSION_ID_URL\n  } from './config';\n  \n  const defaultConfig = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  \n  const apiSettings = {\n    fetchMovies: async (searchTerm, page) => {\n      const endpoint = searchTerm\n        ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n        : `${POPULAR_BASE_URL}&page=${page}`;\n      return await (await fetch(endpoint)).json();\n    },\n    fetchMovie: async movieId => {\n      const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n      return await (await fetch(endpoint)).json();\n    },\n    fetchCredits: async movieId => {\n      const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n      return await (await fetch(creditsEndpoint)).json();\n    },\n    // Bonus material below for login\n    getRequestToken: async () => {\n      const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n      return reqToken.request_token;\n    },\n    authenticate: async (requestToken, username, password) => {\n      const bodyData = {\n        username,\n        password,\n        request_token: requestToken\n      };\n      // First authenticate the requestToken\n      const data = await (\n        await fetch(LOGIN_URL, {\n          ...defaultConfig,\n          body: JSON.stringify(bodyData)\n        })\n      ).json();\n      // Then get the sessionId with the requestToken\n      if (data.success) {\n        const sessionId = await (\n          await fetch(SESSION_ID_URL, {\n            ...defaultConfig,\n            body: JSON.stringify({ request_token: requestToken })\n          })\n        ).json();\n        return sessionId;\n      }\n    },\n    rateMovie: async (sessionId, movieId, value) => {\n      const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n  \n      const rating = await (\n        await fetch(endpoint, {\n          ...defaultConfig,\n          body: JSON.stringify({ value })\n        })\n      ).json();\n  \n      return rating;\n    }\n  };\n  \n  export default apiSettings; ","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div `\n    background: linear-gradient(\n        to bottom, rgba(0, 0, 0, 0) 41%, rgba(0, 0, 0 ,0) 100%\n        ),\n        url(${props => props.image}), var(--darkGrey);\n\n    background-size: 100%, cover;\n    background-position: center;\n    height: 600px;\n    position: relative;\n    animation: animateHeroImage 1s;\n\n    @keyframes animateHeroImage {\n        from {\n            opacity: 0;\n        } to {\n            opacity: 1;\n        }\n    }\n\n`\nexport const Content = styled.div `\n    padding: 20px;\n    max-width: var(--maxWidth);\n    margin: 0 auto;\n`\nexport const Text = styled.div `\n    z-index: 100;\n    max-width: 700px;\n    position: absolute;\n    bottom: 40px;\n    margin-right: 20px; \n    min-height: 100px;\n    color: var(--white);\n    h1 {\n        font-size: var(--fontSuperBig);\n        @media screen and (max-width: 720px) {\n            font-size: var(--fontBig)\n\n        }\n    };\n    p {\n        font-size: var(--fontBig);\n        @media screen and (max-width: 720px) {\n            font-size: var(--fontSmall)\n        }\n    };\n    @media screen and (max-width: 720px) {\n        max-width: 100%\n    }\n\n    \n`","import { Wrapper, Content, Text } from './HeroImage.style'\nimport PropTypes from 'prop-types'\n\nconst HeroImage = ({image, title, text}) => (\n    <Wrapper image={image}>\n        <Content>\n            <Text>\n                <h1>{title}</h1>\n                <p>{text}</p>\n            </Text>\n        </Content>\n    </Wrapper>\n)\n\nHeroImage.propTypes = {\n    image: PropTypes.string,\n    title: PropTypes.string,\n    text: PropTypes.string\n}\n\nexport default HeroImage","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    max-width: var(--maxWidth);\n    margin: 0 auto;\n    padding: 0 20px;\n    h1 {\n        color: var(--medGrey);\n\n        @media screen and (max-width: 768px) {\n            font-size: var(--fontBig)\n        }\n    }\n`\nexport const Content = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    grid-gap: 2rem;\n`","import { Wrapper, Content } from \"./Grid.style\";\nimport PropTypes from 'prop-types'\nconst Grid = ({header, children}) => (\n    <Wrapper>\n        <h1>{header}</h1>\n        <Content>\n            {children}\n        </Content>\n    </Wrapper>\n)\nGrid.propTypes = {\n    header: PropTypes.string,\n    \n}\n\nexport default Grid","import styled from \"styled-components\";\n\nexport const Image = styled.img`\n    width:100%;\n    max-width: 720px;\n    transition: all 0.3s;\n    object-fit: cover;\n    border-radius: 20px;\n    animation: animateThumb 0.5s;\n    :hover {\n        opacity: .8;\n        cursor: pointer\n    }\n    @keyframes animateThumb {\n        from {\n            opacity: 0    \n        } to {\n            opacity: 1\n        }\n    }\n`","\nimport {Image} from './Thumb.style'\nimport { Link } from 'react-router-dom'\n\nconst Thumb = ( {image, movieId, clickable }) => (\n    <div>\n        {clickable ? (\n            <Link to={`/${movieId}`}>\n                <Image \n                    src={image} alt='movie-thumb'\n                />\n            </Link>\n        ) : (\n            <Image \n            src={image} alt='movie-thumb'\n            />\n        )}\n    </div>\n\n\n)\nexport default Thumb ","import { Spinner } from './Spinner.style'\n\nexport default Spinner","import styled from \"styled-components\";\nexport const Spinner = styled.div`\n    border:  5px solid pink;\n    border-top: 5px solid red;\n    border-radius: 50%;\n    width: 50px;\n    height: 50px;\n    animation: spin 0.8s linear infinite;\n    margin: 20px auto;\n\n    @keyframes spin {\n        0% {\n            transform: rotate(0deg)\n        } \n        100% {\n            transform: rotate(360deg)\n        }\n    }\n`","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    display: flex;\n    align-items: center;\n    height: 100px;\n    padding: 0 20px;\n    background-color: var(--darkGrey);\n\n`\n    \n\nexport const Content = styled.div`\n    position: relative;\n    max-width: var(--maxWidth);\n    width: 100%;\n    height: 55px;\n    background: var(--medGrey);\n    margin: 0 auto;\n    border-radius: 40px;\n    color: var(--white);\n    display: flex;\n    justify-content: space-between;\n    img{\n        height: 60%;\n        margin: auto 20px;\n        justify-content: center;\n        /* align-items: center; */\n\n\n    }\n    input {\n        height: 70%;\n        border-radius: 5px;\n        width: 92%;\n        margin: auto 12px auto 0;\n        font-size: var(--fontBig);\n        background: transparent;\n        border: 0;\n        outline: transparent;\n        color: var(--white);\n    }\n`","export default __webpack_public_path__ + \"static/media/search-icon.cd820f5a.svg\";","import { useState, useEffect, useRef } from \"react\";\nimport { Wrapper, Content } from './SearchBar.style';\nimport searchIcon from '../../img-src/search-icon.svg'\n\nconst SearchBar = ({ setSearchTerm}) => {\n    const [state, setState] = useState('')\n    useEffect (() => {\n        const timer = setTimeout(() => {\n            setSearchTerm(state)\n            }  , 500)\n        return () => clearTimeout(timer)\n    },[state])\n    return    (\n    <Wrapper>\n        <Content>\n            <img src={searchIcon} alt='search-icon'/>\n            <input type='text' placeholder='Search Movie...'\n                onChange={event => {setState(event.target.value)}}\n                value= {state}\n            ></input>\n\n        </Content>\n    </Wrapper>  \n    )\n}\nexport default SearchBar","import styled from \"styled-components\";\n\nexport const Wrapper = styled.button `\n    display: block;\n    background: var(--darkGrey);\n    width: 25%;\n    min-width: 200px;\n    height: 60px;\n    border-radius: 30px;\n    color: var(--white);\n    border: 0;\n    font-size: var(--fontBig);\n    margin: 20px auto;\n    outline: none;\n    transition: all 0.3s;\n    cursor: pointer;\n    :hover {\n        opacity: .8\n    }\n`","import { Wrapper } from './Button.style'\nimport PropTypes from 'prop-types'\n\nconst Button = ({text, callback}) => (\n    <Wrapper type='button' onClick={callback}>\n        {text}\n    </Wrapper>\n)\nButton.propTypes = {\n    text: PropTypes.string,\n    callback: PropTypes.func\n}\n\nexport default Button","// Convert time to hours and minutes\nexport const calcTime = time => {\n    const hours = Math.floor(time / 60);\n    const mins = time % 60;\n    return `${hours}h ${mins}m`;\n  };\n  // Convert a number to money formatting\n  export const convertMoney = money => {\n    const formatter = new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n    });\n    return formatter.format(money);\n  };\n\nexport const isPersistedState = stateName => {\n    const sessionState = sessionStorage.getItem(stateName)\n    return sessionState && JSON.parse(sessionState)\n}","import { useState, useEffect, useRef } from \"react\"\nimport { JsxEmit } from \"typescript\"\nimport API from '../API'\nimport { isPersistedState } from '../helpers'\n\nconst initialState = {\n    page: 0,\n    results: [],\n    total_pages: 0,\n    total_result: 0\n}\n\nexport const useHomeFetch = () => {\n    const [searchTerm, setSearchTerm] = useState('')\n    const [state, setState] = useState(initialState)\n    const [loading, setLoading] = useState(false )\n    const [error, setError] = useState(false)\n    const [isLoadingMore, setIsLoadingMore] = useState(false)\n\n    const fetchMovies = async ( page, searchTerm ='') => {\n        console.log('this is in fetch')\n        try {\n            setError(false)\n            setLoading(true)\n            const movies = await API.fetchMovies(searchTerm, page)\n\n            setState(prev => ({\n                ...movies,\n                results: page > 1 ? [...prev.results, ...movies.results] : [...movies.results]\n\n            }))\n            setLoading(false)\n        } catch (error) {\n            setError(true)\n        }\n        setLoading(false)\n    }\n    useEffect(() => {\n        if (!searchTerm) {\n            const sessionState = isPersistedState('homeState')\n\n            if(sessionState) {\n                setState(sessionState)\n                return\n            }\n        }\n        setState(initialState)\n        fetchMovies(1, searchTerm)\n    }, [searchTerm])\n\n    useEffect(() => {\n        if(isLoadingMore) {\n            fetchMovies(state.page + 1, searchTerm)\n            setIsLoadingMore(false)\n        }\n    }, [isLoadingMore], searchTerm, state.page)\n\n    useEffect(() => {\n        if (!searchTerm) sessionStorage.setItem('homeState', JSON.stringify(state))\n\n    }, [searchTerm, state])\n\n\n    return { state, loading, error, searchTerm, setSearchTerm, setIsLoadingMore }\n}","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpeg\";","//3 47 54\n\nimport React, { useEffect } from 'react'\nimport { useState } from 'react'\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL, API_KEY } from '../config'\nimport API from '../API'\nimport HeroImage from './HeroImage/index.js'\nimport Grid from './Grid'\nimport Thumb from './Thumb'\nimport Spinner from './Spinner'\nimport SearchBar from './SearchBar'\nimport Button from './Button'\n\n//components\n\n\n//hook\nimport { useHomeFetch } from '../hooks/useHomeFetch'\n\n\n\n//image\nimport NoImage from '../img-src/no_image.jpeg'\nconst Home = () => {\n    const { \n        state, \n        loading, \n        error,\n        searchTerm, \n        setSearchTerm, \n        setIsLoadingMore \n    } \n        = useHomeFetch()\n    return (\n        <>\n            {!searchTerm && state.results[0] ? <HeroImage \n                image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\n                title= {state.results[0].title}\n                text= {state.results[0].overview}\n            /> : null}\n            <SearchBar setSearchTerm={setSearchTerm}></SearchBar>\n            {loading && <Spinner/>}\n            <Grid header={searchTerm ? 'Search Result' : 'Popular Movies'}>\n                {state.results.map(movie => (\n                    <Thumb\n                        key={movie.id}\n                        clickable\n                        image={\n                            movie.poster_path ? IMAGE_BASE_URL+POSTER_SIZE+movie.poster_path : NoImage\n                        }\n                        movieId={movie.id}\n                    >\n                    </Thumb>\n\n                ))}\n            </Grid>\n            \n            {state.page < state.total_pages && !loading && (\n                <Button \n                    text='Load More' \n                    callback={() => setIsLoadingMore(true)}\n                >\n                </Button>\n            )}\n\n        </>\n    )\n        \n        \n        \n}\nexport default Home","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div `\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 70px;\n    background: var(--medGrey);\n    color: var(--white);\n    \n`\nexport const Content = styled.div `\n    display: flex;\n    width: 100%;\n    max-width: var(--maxWidth);\n    padding: 0 20px;\n\n    a,span {\n        color: var(--white);\n        padding: 0 10px;\n        font-size: var(--fontMed);\n        font-weight: 500;\n        @media screen and (max-width: 786px) {\n            font-size: var(--fontSmall);\n        }\n    }\n    a {\n        text-decoration: none;\n        \n        }    \n    }\n\n`","import { Wrapper, Content } from \"./BreadCrumb.style\";\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nconst BreadCrumb = ({movieTitle}) => {\n\n    return (\n        <Wrapper>\n            <Content>\n            <Link\n                to='/'\n                >Home\n            </Link>\n            <span>|</span>\n            <span>{movieTitle}</span>\n\n            </Content>\n        </Wrapper>\n    )\n}\nBreadCrumb.propTypes  = {\n    movieTitle: PropTypes.string\n}\nexport default BreadCrumb","import styled from \"styled-components\";\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from \"../../config\";\n\nexport const Wrapper = styled.div `\n    background: ${({ backdrop }) => {\n        return backdrop ? \n            `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop}')` :\n             '#000'\n        }\n    };\n    /* display: flex; */\n    /* margin: 0 auto; */\n    background-size: cover;\n    background-position: center;\n    padding: 40px 20px;\n    animation: animateMovieInfo 1s;\n    @keyframes animateMovieInfo {\n        from {\n            opacity: 0;\n        } to {\n            opacity: 1;\n        }\n    }\n`\n\nexport const Content = styled.div `\n    display: flex;\n    max-width: var(--maxWidth);\n    margin: 0 auto;\n    background: rgba(0,0,0,.7);\n    border-radius: 20px;\n    \n    @media screen and (max-width: 768px) {\n        display: block;\n        max-height: none;\n\n    } \n`\nexport const Text = styled.div `\n    width: 100%;\n    flex: 1;\n    padding: 20px 40px;\n    color: var(--white);\n    overflow: hidden;\n\n    .rating-directors {\n        display: flex;\n        justify-content: flex-start;\n    }\n\n    .score {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 35px;\n        height: 35px;\n        background: #fff;\n        color: #000;\n        font-weight: 800;\n        border-radius: 50%;\n        margin: 0;\n\n    }\n    .director {\n        margin: 0 0 0 40px;\n\n    }\n    h1 {\n        @media screen and (max-width: 768px) {\n            font-size: var(--fontBig);\n        }\n    }\n`","import { Wrapper, Content, Text } from './MovieInfo.style'\nimport Thumb from '../Thumb'\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config'\nimport NoImage from '../../img-src/no_image.jpeg'\n\nconst MovieInfo = ({movie}) => {\n    return (\n        <Wrapper backdrop={movie.backdrop_path}>\n            <Content>\n                <Thumb \n                    image={movie.poster_path ?\n                     `${IMAGE_BASE_URL+POSTER_SIZE+movie.poster_path}` \n                     : NoImage}\n                    clickable={false}\n                    \n                >\n                </Thumb>\n                <Text>\n                    <h1>{movie.title}</h1>\n                    <h3>Plot</h3>\n                    <p>{movie.overview}</p>\n                    <div className='rating-directors'>\n                        <div>\n                            <h3>RATING</h3>\n                            <div className='score'>{movie.vote_average}</div>\n                        </div>\n                        <div className=\"director\">\n                            <h3>DIRECTOR{movie.directors.length > 1 ? 'S' : ''}</h3>\n                            {movie.directors.map(director => <p key={director.id}>{director.name}</p>)}\n                        </div>\n                    </div> \n                </Text>\n            </Content>\n        </Wrapper>\n    )\n}\n\nexport default MovieInfo","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div `\n    background: var(--darkGrey);\n    min-height: 100px;\n    display: flex;\n`\nexport const Content = styled.div `\n    width: 100%;\n    max-width: var(--maxWidth);\n    margin: auto;\n    display: flex;\n    justify-content: space-between;\n\n    div {\n        background: var(--medGrey);\n        border-radius: 20px;\n        padding: 10px 20px;\n        margin: 20px;\n        p{\n            margin: 0;\n            text-align: center;\n        }\n\n    }\n\n    @media screen and (max-width: 768px) {\n        display: block;\n        div {\n            margin: 20px 80px;\n            padding:10px\n        }\n    }\n`","import { calcTime, convertMoney } from \"../../helpers\";\nimport { Wrapper, Content } from \"./MovieInfoBar.style\";\n\nconst MovieInfoBar = ({ time, budget, revenue }) => (\n        <Wrapper>\n            <Content>\n                <div className='column'>\n                    <p>Running time: {calcTime(time)}</p>\n                </div>\n                <div className='column'>\n                    <p>Budget: {convertMoney(budget)}</p>\n                </div>\n                <div className='column'>\n                    <p>Revenue: {convertMoney(revenue)}</p>\n                </div>\n            </Content>\n        </Wrapper>\n)\n\nexport default MovieInfoBar","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div `\n    color: var(--white);\n    background: var(--darkGrey);\n    border-radius: 20px;\n    padding:5px;\n    text-align: center;\n    h3 {\n        margin: 10px 0 0 0;\n\n    }\n    p {\n        margin: 5px 0;\n    }\n`\n\nexport const Image = styled.img `\n    display: block;\n    width: 100%;\n    height: 200px;\n    object-fit: cover;\n    border-radius: 15px;\n\n`","import { Wrapper, Image } from \"../Actor/Actor.style\";\n\nimport PropTypes from 'prop-types'\n\nconst Actor = ({ name, character, imageUrl }) => (\n    <Wrapper>\n        <Image src={imageUrl} alt='actor-thumb'/>\n        <h3>{name}</h3>\n        <p>{character}</p>\n    </Wrapper>\n)\n\nActor.propTypes = {\n    name: PropTypes.string,\n    character: PropTypes.string,\n    imageUrl: PropTypes.string, \n}\n\nexport default Actor","import { IMAGE_BASE_URL, POSTER_SIZE } from \"../config\"\nimport { useParams } from \"react-router\"\nimport Grid from './Grid'\nimport Spinner from './Spinner' \nimport BreadCrumb from './BreadCrumb'\nimport NoImage from '../img-src/no_image.jpeg'\nimport MovieInfo from './MovieInfo'\nimport MovieInfoBar from './MovieInfoBar'\nimport Actor from './Actor'\n\nimport { useMovieFetch } from \"../hooks/useMovieFetch\"\n\nconst Movie =  () => {\n    const { movieId } = useParams()\n    const { state: movie, loading, error} = useMovieFetch(movieId)\n    if (loading) return <Spinner/>\n    if (error) return <div>Something went wrong...</div>\n    return (\n        <div>\n            <BreadCrumb \n                movieTitle={movie.original_title}\n            />\n             \n            <MovieInfo movie={movie}></MovieInfo>\n            <MovieInfoBar \n                time={movie.runtime} \n                budget={movie.budget} \n                revenue={movie.revenue}\n            >\n            </MovieInfoBar>\n            <Grid \n                header='Actors'\n            >\n                {movie.actors.map(actor => (\n                    <Actor \n                        key={actor.credit_id}\n                        name={actor.name}\n                        character={actor.character}\n                        imageUrl={\n                            actor.profile_path ? `${IMAGE_BASE_URL+POSTER_SIZE+actor.profile_path}` : NoImage\n                        }\n                    ></Actor>\n                ))}\n            </Grid>\n        </div>\n    )\n}\n\nexport default Movie","import { useState, useEffect } from \"react\";\nimport API from '../API'\nimport { isPersistedState } from \"../helpers\";\n\nexport const useMovieFetch = movieId => {\n    const [state, setState] = useState({})\n    const [loading, setLoading] = useState(true)\n    const [error, setError] = useState(false)\n    \n    const fetchMovie = async () => {\n        try {\n            setLoading(true)\n            setError(false)\n            const movie = await API.fetchMovie(movieId)\n            const credits = await API.fetchCredits(movieId)\n            const directors = credits.crew.filter( member => member.job === 'Director')\n\n            setState({\n                ...movie,\n                actors: credits.cast,\n                directors\n            })\n            setLoading(false)\n        } catch (error) {\n            setError(true)\n        }\n    }\n    \n    useEffect(() => {\n        const sessionState = isPersistedState(movieId)\n        if (sessionState) {\n            setState(sessionState)\n            setLoading(false)\n            console.log('not from API')\n            return\n        }\n        \n        fetchMovie()\n        console.log('this is from API')\n\n    },[movieId])\n    useEffect(() => {\n        sessionStorage.setItem(movieId, JSON.stringify(state))\n    }, [movieId, state])\n\n    return { state, loading, error }\n}\n\n","const NotFound = () => <div>NotFound</div>\nexport default NotFound","//routing\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\n\nimport React, { Component, useState } from 'react';\n//styles\nimport { GlobalStyle } from './GlobalStyle'\n//components\nimport Header from './components/Header'\nimport Home from './components/Home'\nimport Movie from './components/Movie'\nimport NotFound from './components/NotFound'\n\nfunction App () {\n  return (\n    <Router>\n      <Header />\n      <Routes>\n        <Route path='/' element={<Home/>}/>\n        <Route path='/:movieId' element={<Movie/>}/>\n        <Route path='/*' element={<NotFound/>} />\n      </Routes>\n      <GlobalStyle />\n    </Router>\n  )\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// reportWebVitals();\n"],"sourceRoot":""}